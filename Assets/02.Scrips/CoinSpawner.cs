using System.Collections;
using System.Collections.Generic;
using UnityEngine;

// 발판을 생성하고 주기적으로 재배치하는 스크립트
public class CoinSpawner : MonoBehaviour
{
    public GameObject CoinPrefab; // 생성할 코인의 원본 프리팹
    public int count = 5; // 생성할 코인 수

    public float timeBetSpawnMin = 0.5f; // 다음 배치까지의 시간 간격 최솟값
    public float timeBetSpawnMax = 1f; // 다음 배치까지의 시간 간격 최댓값
    private float timeBetSpawn; // 다음 배치까지의 시간 간격

    public float yMin = 3f; // 배치할 위치의 최소 y값
    public float yMax = 8f; // 배치할 위치의 최대 y값
    private float xPos = 20f; // 배치할 위치의 x값

    private GameObject[] coins; // 미리 생성한 코인들
    private int currentIndex = 0; // 사용할 현재 순번의 코인

    // 초반에 생성한 코인을 화면 밖에 숨겨둘 위치
    private Vector2 poolPosition = new Vector2(0, -25);
    private float lastSpawnTime; // 마지막 배치 시점
    void Start()
    {
        // count만큼의 공간을 가지는 새로운 코인 배열 생성
        coins = new GameObject[count];

        // count만큼 루프하면서 코인 생성
        for (int i = 0; i < count; i++)
        {
            // CoinPrefab을 원본으로 새 코인을 poolPosition 위치에 복제 생성
            // 생성된 코인을 coins 배열에 할당
            coins[i] = Instantiate(CoinPrefab, poolPosition, Quaternion.identity);
        }

        // 마지막 배치 시점 초기화
        lastSpawnTime = 0f;
        // 다음번 배치까지의 시간 간격을 0 으로 초기화
        timeBetSpawn = 0f;
    }

    // Update is called once per frame
    void Update()
    {
        // 게임오버 상태에서는 동작하지 않음
        if (GameManager.instance.isGameover)
        {
            return;
        }

        // 마지막 배치 시점에서 timeBetSpawn 이상 시간이 흘렀다면
        if (Time.time >= lastSpawnTime + timeBetSpawn)
        {
            // 기록된 마지막 배치 시점을 현재 시점으로 갱신
            lastSpawnTime = Time.time;

            // 다음 배치까지의 시간 간격을 timeBetSpawnMin, timeBetSpawnMax 사이에서 랜덤 설정
            timeBetSpawn = Random.Range(timeBetSpawnMin, timeBetSpawnMax);

            // 배치할 위치의 높이를 yMin과 yMax 사이에서 랜덤 설정
            float yPos = Random.Range(yMin, yMax);

            // 사용할 현재 순번의 코인 게임 오브젝트를 비활성화하고 즉시 다시 활성화
            // 이때 코인의 coin 컴포넌트의 OnEnable 메서드가 실행됨
            coins[currentIndex].SetActive(false);
            coins[currentIndex].SetActive(true);

            // 현재 순번의 코인을 화면 오른쪽에 재배치
            coins[currentIndex].transform.position = new Vector2(xPos, yPos);
            // 순번 넘기기
            currentIndex++;

            // 마지막 순번에 도달했다면 순번을 리셋
            if (currentIndex >= count)
            {
                currentIndex = 0;
            }
        }
    }
}
